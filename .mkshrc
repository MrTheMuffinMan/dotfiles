#!/bin/sh
PS1=[$'\e[31;1m$(id -un)'"@$(hostname)"\ '$(pwd | sed "s,^$HOME,~,")'$'\e[0m'"]$(
	if (( USER_ID )); then print \$; else print \#; fi) "

# aliases
alias acp='scp -P 8022'
alias as='alsactl --file ~/.config/asound.state store'
alias am=alsamixer
alias ash='ssh -p 8022'
alias bc='$PLAN9/bin/bc -l'
alias bluempg='mpg123 -abluealsa -f500'
alias blueplay='aplay -D bluealsa'
alias bvol='amixer -D bluealsa sset "$BLUEALSA_DEV"'
alias cemu='$SRC_DIR/CEmu/gui/qt/CEmu'
alias config='git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
alias curl='curl -s --show-error'
alias den='dolphin-emu-nogui'
alias diff='diff --color'
alias doas='doas '
alias doom=crispy-doom
alias dos2unix='dos2unix -q'
alias dt='dict -d pgw'
alias feh='feh -B black'
alias ffmpeg='ffmpeg -hide_banner'
alias ffprobe='ffprobe -hide_banner'
alias fl=figlet
alias ffplay='ffplay -autoexit -hide_banner'
alias fxname='basename $(ll /proc/$(xprop _NET_WM_PID | awk "{print \$NF}")/exe | awk "{print \$NF}")'
alias gimp='gimp -s'
alias gw='curl -s https://v2.wttr.in/ | head -n42 | less -FKRSX'
alias gm='curl -s https://wttr.in/Moon | head -n23 | less -FKRSX'
alias hc=HeadsetControl
alias la='ls -A'
alias less='less --mouse'
alias ll='ls -l'
alias love='LD_LIBRARY_PATH=$SRC_DIR/openal-soft/build love'
alias ls='ls --color=auto'
alias fw='httpdirfs "https://open.audio" ~/.local/music'
alias make='make -j$(nproc)'
alias mailx=mail
alias mci='make clean install'
alias mls='mpv "$(ls --color=never -t | sed q)"'
alias mpa='mpv --no-video'
alias mpv='mpv --ao=sndio'
alias naw='mpv --aid=2 --sid=2' # not a weeb
alias nf=neofetch
alias osu='dotnet run --project $SRC_DIR/osu/osu.Desktop -c Release'
alias pdf=zathura
alias pf=pfetch
alias pl='pacmd list-sinks | grep -e "name:" -e "index:" -e "base volume:"'
alias pm=pulsemixer
alias pg="$PAGER"
alias pi='echo "scale=10; 4*a(1)" | bc -l'
alias rec='ffmpeg -video_size 1920x1080 -framerate 60 -f x11grab -i $DISPLAY '
alias scrot='scrot %Y-%m-%d-%T-screenshot.png'
alias sfu=sfeed_update
alias spc=speedtest-cli
alias sudo=doas
alias sx=startx
alias th='dict -d roget'
alias tmux='tmux -2'
alias tl='trans -b -no-autocorrect'
alias trc='transmission-remote-cli >/dev/null'
alias vget=youtube-dl
alias vi=vis
alias wf='curl https://v2.wttr.in'
alias whereami='curl https://ipinfo.io/8.8.8.8/loc'
alias wr='curl "https://wttr.in/?format="%l:+%c+%C+%t""'
alias wtf=wtfubar
alias wtfubar='wtfubar -o'
alias xb='xrandr --output DVI-D-0 --brightness'
alias youtube-dl='youtube-dl -i -q'

# functions
2sf() {
	song="$1"
	shift	
	2sftowav "$song" /dev/stdout 2>/dev/null | aucat -r 44100 -i - "$@" 
}

blueopus() {
	opusdec --quiet "$1" - | aplay -D bluealsa -
}

c() { 
	printf "%s\n" "$*" | bc 
}

cvid() { 
	ffplay "$(youtube-dl -g -f best "$1")" 
}

dec() {
	openssl enc -aes-256-cbc -d -in "$1" | tar xz
}

doc() {
	catdoc "$1" | "$PAGER"
}
 
docx() {
	docx2txt "$1" - | "$PAGER"
}

enc() {
	tar cz "$1" | openssl enc -aes-256-cbc -out "$1".tar.gz.dat && srm -r "$1"
}

epub() {
	epub2txt "$1" | "$PAGER"
}

ew() { # edit which 
	"$EDITOR" $(which "$1")
}

hex() {
        strings "$1" | "$PAGER"
}

ips() {
	ip addr show "${1:-eth0}" | grep 'inet ' | awk '{print $2}' | cut -f1 -d'/'
}

lac() {
	song="$1"
        shift
	flac -s -d "$song" -c | aucat -r 44100 -i - "$@"
}

lst() { # last (newest) file(s)
	ls -c --color $2 | sed "$1"q
}

m4a() {
        song="$1"
        shift
        faad -q -w "$song" | aucat -i - "$@"
}

mad() {
	lowdown -Tman "$1" | mandoc | "$PAGER"
}

md() { 
	markdown "$1" | w3m -T text/html | "$PAGER"
}

mid() {
	song="$1"
        shift
	fluidsynth -i -n -T raw -F- "$SF2" "$song" 2>/dev/null | aucat -i - "$@"
}

mono() {
	ffmpeg -i "$1" -ac 1 /tmp/"$1" && mv /tmp/"$1" .
}

mp3() {
	song="$1"
        shift
	mpg123 -q -s "$song" | aucat -r 44100 -i - "$@"	
}

physexec() { 
	\sudo -E ip netns exec eth0 \sudo-E -u \#$(id -u) -g \#$(id -g) "$@"; 
}

odt() {
	odt2txt "$1" | "$PAGER"
}

ogg() {
	song="$1"
        shift
        oggdec -Q "$song" -o - | aucat -i - "$@"
}

opus() {
	song="$1"
	shift
	opusdec --quiet "$song" - | aucat -i - "$@" 
}

pod() {
	pod2mdoc "$1" | mandoc | "$PAGER"
}

pw() {
	< /dev/urandom tr -cd "[:print:]" | head -c 32; echo
}

rst() {
	rst2man "$1" | mandoc | "$PAGER"
}

sfeed_youtube() {
	curl -s -L "https://www.youtube.com/user/"$1"/videos" | sfeed_web | cut -f 1
}

sfp() { 
	sfeed_plain ~/.sfeed/feeds/"$1" | "$PAGER" 
}

shorten() {
	curl -F shorten="$1" https://0x0.st
}

torrent() { # yoinked from https://gitlab.com/dessalines/torrents.csv/-/raw/master/search.sh
	url="https://gitlab.com/dessalines/torrents.csv/-/raw/master/torrents.csv"
	
	curl "$url" | grep -i ${1// /.*} | sort -t ';' -k 5 -g | while read -r line; do
	 infohash=$(echo -e "$line" | cut -d ';' -f1)
	 magnet_link="magnet:?xt=urn:btih:$infohash"
  	 name=$(echo -e "$line" | cut -d ';' -f2)
  	 seeders=$(echo -e "$line" | cut -d ';' -f5)
  	 size_bytes=$(echo -e "$line" | cut -d ';' -f3)
  	 size=$(numfmt --to=iec-i --suffix=B $size_bytes)
  	 # Construct the search result
  	 result="$name\n\tseeders: $seeders\n\tsize: $size\n\tlink: $magnet_link"
  	 echo -e "$result"
	done
}

upload() {
	curl -T "$1" https://oshi.at/"$(basename "$1")"/129600 
}

video() {
	ffmpeg -re -i "$1" -f v4l2 /dev/video0	
}

w3mimg() { 
	w3m -o imgdisplay=/usr/lib/w3m/w3mimgdisplay "$1" 
}

w3mimgdisplay() {
	/usr/lib/w3m/w3mimgdisplay <<<$'0;1;100;100;100;100;;;;;"$1"\n4;\n3;i' 
}

wm() { 
	echo "$1" | wc -m 
}

ww() { 
	echo "$1" | wc -w 
}

yta() {
	mpv --ytdl-format=bestaudio ytdl://ytsearch:"$*"
}
